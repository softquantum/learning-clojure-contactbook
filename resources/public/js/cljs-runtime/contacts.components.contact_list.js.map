{"version":3,"sources":["contacts/components/contact_list.cljs"],"mappings":";AAMA,AAAA;AAAA,qDAAA,iBAAAA,WAAA,6DAAAC,qBAAAC,nKAAOU;AAAP,AAAA,IAAAT,aAAA,mFAAA,AAAAC,8BAAAH,sBAAAC;IAAAG,aAAA,AAAAC,4CAAAH,WAAA,IAAA;IAAAE,iBAAA,AAAAE,4BAAAF;cAAA,AAAAG,4CAAAH,eAAA,rEAAkCQ;AAAlC,AAAA;oJAGc,uJAAA,1GAAK,AAAA,gGAAaA,0DAAa,AAAA,2FAAYA,tbAsJpD,OAAA,AAAAY,qCAAA,KAAA,KAAA,AAAA,AAAAA,qCAAA,MAAA,KAAA,AAAA,AAAAA,qCAAA,IAAA;;AAzJL,AAAA,GAAA,AAAAhB;AAAA,IAAAC,WAAAV;AAAA,AAAA,AAAAW,gBAAAD,SAAA,cAAA;;AAAAA;;AAAAV;;;;AAAA;AAAA;AAAOY,AAKP,AAAA;AAAA,gDAAA,iBAAAE,WAAA,wDAAAb,qBAAAC,zJAAOe;AAAP,AAAA,IAAAF,aAAA,mFAAA,AAAAX,8BAAAH,sBAAAC;AAAA,AAAA;AACE,IAAAgB,aAAgB,AAACG;YAAjB,AAAAf,4CAAAY,WAAA,IAAA,nEAAOC;QAAP,AAAAb,4CAAAY,WAAA,IAAA,/DAAaE;IACPE,eAAS,AAAA,0FAAWH;AAD1B,oHAIK,AAACI,oDACE,WAAKC,EAAEX,rLAuCJ,OAAA,AAAAY,qCAAAE,oBAAA,KAuGR,AAAA,AAAAF,qCAAA,KAAA;AA9IK,4CACKb,uFAAwBY,YACIX,/IA6BpC,OAAA,AAAAY,wFAAA,iBAAAC,WAAA,EAAA,QAAA;AAAA,AAAAA;;GA5BGJ;;AATV,AAAA,GAAA,AAAAb;AAAA,IAAAO,WAAAF;AAAA,AAAA,AAAAH,gBAAAK,SAAA,cAAA;;AAAAA;;AAAAF;;;;AAAA;AAAA;AAAOG","names":["G__33440","props__26563__auto__","maybe-ref__26564__auto__","vec__33442","helix.core/extract-cljs-props","map__33446","cljs.core.nth","cljs.core/--destructure-map","cljs.core.get","goog/DEBUG","G__33448","goog.object/set","contacts.components.contact-list/contact-list-item","contact","G__33454","vec__33459","G__33472","contacts.components.contact-list/contact-list","vec__33462","state","_","contacts.state/use-app-state","contacts","cljs.core.map_indexed","i","helix.core/get-react","obj33470","helix.core/Fragment"],"sourcesContent":["(ns contacts.components.contact-list\n   (:require [helix.core :refer [defnc <> $]]\n             [helix.dom :as d]\n             [contacts.state :refer [use-app-state]]))\n\n\n(defnc contact-list-item [{:keys [contact]}]\n   (d/li\n      (d/div\n         (d/p (str (:first_name contact) \" \" (:last_name contact))))))\n\n(defnc contact-list []\n  (let [[state _] (use-app-state)\n        contacts (:contacts state)]\n   (<>\n    (d/ul\n       (map-indexed\n          (fn [i contact]\n            ($ contact-list-item {:key i\n                                  :contact contact}))\n          contacts)))))\n"]}