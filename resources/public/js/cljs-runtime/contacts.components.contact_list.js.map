{"version":3,"sources":["contacts/components/contact_list.cljs"],"mappings":";AAOA,AAAA;AAAA,qDAAA,iBAAAA,WAAA,6DAAAC,qBAAAC,nKAAOU;AAAP,AAAA,IAAAT,aAAA,mFAAA,AAAAC,8BAAAH,sBAAAC;IAAAG,aAAA,AAAAC,4CAAAH,WAAA,IAAA;IAAAE,iBAAA,AAAAE,4BAAAF;cAAA,AAAAG,4CAAAH,eAAA,rEAAkCQ;AAAlC,AAAA;AACG,IAAAC,aAAkB,AAACG;QAAnB,AAAAX,4CAAAQ,WAAA,IAAA,/DAAOC;cAAP,AAAAT,4CAAAQ,WAAA,IAAA,rEAASE;IACHE,eAAa,AAAA,uFAASF;IACtBG,iBAAe,AAAA,uGAAiBH;AAFtC,AAkJE,OAAA,AAAAc,qCAAA,KAAA,iBAAAG,WAAA,EAAA,YAAA;AAAA,AAAAA;KAAA,AAAA,AAAAH,qCAAA,MAAA,iBAAAI,WAAA,EAAA,YAAA;AAAA,AAAAA;mDA7IW,uJAAA,1GAAK,AAAA,gGAAarB,0DAAa,AAAA,2FAAYA,qEA6ItD,AAAA,AAAAiB,qCAAA,SAAA,iBAAAK,WAAA,EAAA,YAAA,oEAAA,UAAA,3jBAKA,AAAA,AAAAL,qCAAA,IAAA,4TAAA,AAAA,AAAAA,qCAAA,MAAA;AA/ImC,QAACZ,6CAAAA,sDAAAA,XAAaL,kCAAAA,lIA0IjD;;AAAA,AAAAsB;KAAA,UAAA,AAAA,AAAAL,qCAAA,SAAA,iBAAAM,WAAA,EAAA,YAAA,+CAAA,UAAA;AAvImC,sSAAA,2CAAA,1UAAChB,sDAAO,CAAA,kFAA2C,AAAA,gFAAKP,4KACtC,WAAKE,vZAsI1D;AAtIqD,AACG,QAACI,+CAAAA,wDAAAA,XAAeN,oCAAAA;;;AAqIxE,AAAAuB;KAAA;;AAnJL,AAAA,GAAA,AAAA3B;AAAA,IAAAC,WAAAV;AAAA,AAAA,AAAAW,gBAAAD,SAAA,cAAA;;AAAAA;;AAAAV;;;;AAAA;AAAA;AAAOY,AAiBP,AAAA;AAAA,gDAAA,iBAAAS,WAAA,wDAAApB,qBAAAC,zJAAOsB;AAAP,AAAA,IAAAF,aAAA,mFAAA,AAAAlB,8BAAAH,sBAAAC;AAAA,AAAA;AACE,IAAAuB,aAAgB,AAACR;YAAjB,AAAAX,4CAAAmB,WAAA,IAAA,nEAAOC;QAAP,AAAApB,4CAAAmB,WAAA,IAAA,/DAAaV;IACPY,eAAS,AAAA,0FAAWD;AAD1B,oHAIK,AAACE,oDACE,WAAKC,EAAEhB,rLA0BJ,OAAA,AAAAiB,qCAAAE,oBAAA,KAuGR,AAAA,AAAAF,qCAAA,KAAA;AAjIK,4CACKlB,uFAAwBiB,YACIhB,/IAgBpC,OAAA,AAAAiB,wFAAA,iBAAAC,WAAA,EAAA,QAAA;AAAA,AAAAA;;GAfGJ;;AATV,AAAA,GAAA,AAAAlB;AAAA,IAAAc,WAAAF;AAAA,AAAA,AAAAV,gBAAAY,SAAA,cAAA;;AAAAA;;AAAAF;;;;AAAA;AAAA;AAAOG","names":["G__35895","props__26563__auto__","maybe-ref__26564__auto__","vec__35896","helix.core/extract-cljs-props","map__35899","cljs.core.nth","cljs.core/--destructure-map","cljs.core.get","goog/DEBUG","G__35911","goog.object/set","contacts.components.contact-list/contact-list-item","contact","vec__35900","_","actions","contacts.state/use-app-state","set-selected","remove-contact","ajax.core.DELETE","G__35914","vec__35915","G__35923","contacts.components.contact-list/contact-list","vec__35918","state","contacts","cljs.core.map_indexed","i","helix.core/get-react","obj35922","helix.core/Fragment","obj35904","obj35906","obj35908","obj35910"],"sourcesContent":["(ns contacts.components.contact-list\n   (:require [ajax.core :refer [DELETE]]\n             [helix.core :refer [defnc <> $]]\n             [helix.dom :as d]\n             [contacts.state :refer [use-app-state]]))\n\n\n(defnc contact-list-item [{:keys [contact]}]\n   (let [[_ actions] (use-app-state)\n         set-selected (:select actions)\n         remove-contact (:remove-contact actions)]\n     (d/li {:class '[mb-2]}\n        (d/div {:class '[flex justify-between]}\n           (d/p (str (:first_name contact) \" \" (:last_name contact)))\n           (d/div\n                  (d/button {:class '[bg-green-500 text-white mx-1 py-1 px-4 rounded focus:bg-green-300]\n                             :on-click #(set-selected contact)}\n                            \"Select\")\n                  (d/button {:class '[bg-red-500 text-white mx-1 py-1 px-4 rounded]\n                             :on-click #(DELETE (str \"http://localhost:8080/api/contacts/\" (:id contact))\n                                                {:handler (fn [_]\n                                                             (remove-contact contact))})}\n                            \"Delete\"))))))\n\n(defnc contact-list []\n  (let [[state _] (use-app-state)\n        contacts (:contacts state)]\n   (<>\n    (d/ul\n       (map-indexed\n          (fn [i contact]\n            ($ contact-list-item {:key i\n                                  :contact contact}))\n          contacts)))))\n"]}