{"version":3,"sources":["contacts/core.cljs"],"mappings":";;AAUA,AAAA;AAAA,oBAAA,iBAAAA,WAAA,4BAAAC,qBAAAC,jGAAOM;AAAP,AAAA,IAAAL,aAAA,mFAAA,AAAAC,8BAAAH,sBAAAC;AAAA,AAAA;AACG,IAAAO,aAAwB,sBAAA,tBAACI;YAAzB,AAAAH,4CAAAD,WAAA,IAAA,nEAAOE;gBAAP,AAAAD,4CAAAD,WAAA,IAAA,vEAAaG;AAAb,AAsKO,IAAAiB,iBAAA,AAAAC,oBAAA;AAnKD,0DAAA,uFAAA,2CAAA,rLAAChB,gPACc,WAAKC,lQAkKnB;AAlKc,AACG,QAACH,0CAAAA,oDAAAA,ZAAUG,gCAAAA;;;qBAsIE,jBA2B9BgB;AAAA,AAAA,CAAAC,2DAAAA,yDAAAH,eAAAE,kBAAAC,qCAAAH,eAAAE;;AAhKJ,AAACf,YAAeL;;AAChB,oBAAIA;0GAEKM,1GAoCF,OAAA,AAAAO,qCAAAG,oBAAA,KAAA,AAAA,AAAAH,iEAAA,MAkGR,AAAA,AAAAA,qCAAA,MAAA,iBAAAI,WAAA,EAAA,YAAA;AAAA,AAAAA;0CApIaV,uFAAwBP,5HA0BnC,AAAA,AAAAa,mFAAA,iBAAAC,WAAA,EAAA;AAAA,AAAAA;2CAzBWN,sFAAuB,AAACC,gBAAMT,3IAyBzC,AAAA,AAAAa,mFAAA,iBAAAE,WAAA,EAAA;AAAA,AAAAA;;;AA+GF,OAAA,AAAAF,qCAAA,IAAA,KAAA;;;AArJL,AAAA,GAAA,AAAAnB;AAAA,IAAAC,WAAAN;AAAA,AAAA,AAAAO,gBAAAD,SAAA,cAAA;;AAAAA;;AAAAN;;;;AAAA;AAAA;AAAOQ,AAgBP,qBAAA,rBAA+Ba;AAA/B,AACG,OAACC,gFAAcd,wBAAK,wBAAA,xBAACe,7DA6BX,AAAA,AAAAC,uDAAA;;;AA3Bb","names":["G__29400","props__26563__auto__","maybe-ref__26564__auto__","vec__29401","helix.core/extract-cljs-props","goog/DEBUG","G__29415","goog.object/set","contacts.core/app","vec__29404","cljs.core.nth","state","set-state","helix.hooks/use-state","ajax.core.GET","response","js/console.log","contacts.components.nav/nav","contacts.components.contact-list/contact-list","contacts.components.contact-form/contact-form","cljs.core/first","contacts.core/init","js/module$node_modules$react_dom$index.render","js/document.getElementById","helix.core/get-react","obj29412","obj29414","helix.core/Fragment","obj29410","G__29407","helix.hooks/wrap-fx","G__29408","helix.hooks/raw-use-effect"],"sourcesContent":["(ns contacts.core\n   (:require [ajax.core :refer [GET]]\n             [helix.core :refer [defnc $ <>]]\n             [helix.hooks :as hooks]\n             [helix.dom :as d]\n             [\"react-dom\" :as dom]\n             [contacts.components.nav :refer [nav]]\n             [contacts.components.contact-list :refer [contact-list]]\n             [contacts.components.contact-form :refer [contact-form]]))\n\n(defnc app []\n   (let [[state set-state] (hooks/use-state nil)]\n      (hooks/use-effect\n         :once\n         (GET \"http://localhost:8080/api/contacts\"\n              {:handler (fn [response]\n                           (set-state response))}))\n      (js/console.log state)\n      (if state\n         (<>\n            ($ nav)\n            (d/div {:class '[container pt-4]}\n               ($ contact-list {:contacts state})\n               ($ contact-form {:contact (first state)})))\n         (d/p \"Loading...\"))))\n\n(defn ^:export ^dev/after-load init []\n   (dom/render ($ app) (js/document.getElementById \"app\")))\n\n(comment\n   (GET \"http://localhost:8080/api/contacts\"\n        {:handler (fn [response]\n                     (.log js/console response))}))"]}